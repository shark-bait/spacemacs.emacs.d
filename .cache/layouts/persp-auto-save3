;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil ((def-buffer "login-one.js" "/Users/zhangbin/my_rails_projects/cbook/client/src/components/views/login/login-one.js" js2-mode) (def-buffer "README.org<floobits>" "/Users/zhangbin/.emacs.d/layers/+pair-programming/floobits/README.org" org-mode) (def-buffer "init.el" "/Users/zhangbin/.spacemacs.d/init.el" emacs-lisp-mode) (def-buffer "floobits" "~/.emacs.d/layers/+pair-programming/floobits/" dired-mode) (def-buffer "+pair-programming" "~/.emacs.d/layers/+pair-programming/" dired-mode) (def-buffer "layers" "~/.emacs.d/layers/" dired-mode) (def-buffer "+os" "~/.emacs.d/layers/+os/" dired-mode) (def-buffer "nixos" "~/.emacs.d/layers/+os/nixos/" dired-mode) (def-buffer "README.org<nixos>" "/Users/zhangbin/.emacs.d/layers/+os/nixos/README.org" org-mode) (def-buffer "osx" "~/.emacs.d/layers/+os/osx/" dired-mode) (def-buffer "README.org<osx>" "/Users/zhangbin/.emacs.d/layers/+os/osx/README.org" org-mode) (def-buffer "+misc" "~/.emacs.d/layers/+misc/" dired-mode) (def-buffer "nlinum" "~/.emacs.d/layers/+misc/nlinum/" dired-mode) (def-buffer "+lang" "~/.emacs.d/layers/+lang/" dired-mode) (def-buffer "+intl" "~/.emacs.d/layers/+intl/" dired-mode) (def-buffer "keyboard-layout" "~/.emacs.d/layers/+intl/keyboard-layout/" dired-mode) (def-buffer "README.org<keyboard-layout>" "/Users/zhangbin/.emacs.d/layers/+intl/keyboard-layout/README.org" org-mode) (def-buffer "chinese" "~/.emacs.d/layers/+intl/chinese/" dired-mode) (def-buffer "README.org<chinese>" "/Users/zhangbin/.emacs.d/layers/+intl/chinese/README.org" org-mode) (def-buffer "+fun" "~/.emacs.d/layers/+fun/" dired-mode) (def-buffer "games" "~/.emacs.d/layers/+fun/games/" dired-mode) (def-buffer "emoji" "~/.emacs.d/layers/+fun/emoji/" dired-mode) (def-buffer "README.org<emoji>" "/Users/zhangbin/.emacs.d/layers/+fun/emoji/README.org" org-mode) (def-buffer "+frameworks" "~/.emacs.d/layers/+frameworks/" dired-mode) (def-buffer "ruby-on-rails" "~/.emacs.d/layers/+frameworks/ruby-on-rails/" dired-mode) (def-buffer "README.org<ruby-on-rails>" "/Users/zhangbin/.emacs.d/layers/+frameworks/ruby-on-rails/README.org" org-mode) (def-buffer "react" "~/.emacs.d/layers/+frameworks/react/" dired-mode) (def-buffer "README.org<react>" "/Users/zhangbin/.emacs.d/layers/+frameworks/react/README.org" org-mode) (def-buffer "+distributions" "~/.emacs.d/layers/+distributions/" dired-mode) (def-buffer "+completion" "~/.emacs.d/layers/+completion/" dired-mode) (def-buffer "auto-completion" "~/.emacs.d/layers/+completion/auto-completion/" dired-mode) (def-buffer "packages.el" "/Users/zhangbin/.emacs.d/layers/+completion/auto-completion/packages.el" emacs-lisp-mode) (def-buffer "+checkers" "~/.emacs.d/layers/+checkers/" dired-mode) (def-buffer "+chat" "~/.emacs.d/layers/+chat/" dired-mode) (def-buffer "jabber" "~/.emacs.d/layers/+chat/jabber/" dired-mode) (def-buffer "README.org<jabber>" "/Users/zhangbin/.emacs.d/layers/+chat/jabber/README.org" org-mode) (def-buffer "erc" "~/.emacs.d/layers/+chat/erc/" dired-mode) (def-buffer "README.org<erc>" "/Users/zhangbin/.emacs.d/layers/+chat/erc/README.org" org-mode) (def-buffer ".emacs.d" "~/.emacs.d/" dired-mode) (def-buffer "ivy" "~/.emacs.d/layers/+completion/ivy/" dired-mode) (def-buffer "helm" "~/.emacs.d/layers/+completion/helm/" dired-mode) (def-buffer "README.org<auto-completion>" "/Users/zhangbin/.emacs.d/layers/+completion/auto-completion/README.org" org-mode) (def-buffer "local" "~/.emacs.d/layers/+completion/auto-completion/local/" dired-mode) (def-buffer "snippets" "~/.emacs.d/layers/+completion/auto-completion/local/snippets/" dired-mode) (def-buffer "emacs-lisp-mode" "~/.emacs.d/layers/+completion/auto-completion/local/snippets/emacs-lisp-mode/" dired-mode)) (def-wconf (((min-height . 8) (min-width . 10) (min-height-ignore . 6) (min-width-ignore . 4) (min-height-safe . 2) (min-width-safe . 2) (min-pixel-height . 136) (min-pixel-width . 80) (min-pixel-height-ignore . 102) (min-pixel-width-ignore . 32) (min-pixel-height-safe . 34) (min-pixel-width-safe . 16)) vc (pixel-width . 1272) (pixel-height . 765) (total-width . 159) (total-height . 45) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 1272) (pixel-height . 281) (total-width . 159) (total-height . 17) (normal-height . 0.3673202614379085) (normal-width . 1.0) (buffer "README.org<floobits>" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 nil) (vscroll . 0) (dedicated) (point . 1753) (start . 559))) (leaf (last . t) (pixel-width . 1272) (pixel-height . 484) (total-width . 159) (total-height . 28) (normal-height . 0.6326797385620915) (normal-width . 1.0) (buffer "login-one.js" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 nil) (vscroll . 0) (dedicated) (point . 1304) (start . 845))))) (def-params ((gui-eyebrowse-last-slot . 1) (gui-eyebrowse-current-slot . 1) (gui-eyebrowse-window-configs (1 (((min-height . 8) (min-width . 10) (min-height-ignore . 6) (min-width-ignore . 4) (min-height-safe . 2) (min-width-safe . 2) (min-pixel-height . 136) (min-pixel-width . 80) (min-pixel-height-ignore . 102) (min-pixel-width-ignore . 32) (min-pixel-height-safe . 34) (min-pixel-width-safe . 16)) vc (pixel-width . 1272) (pixel-height . 765) (total-width . 159) (total-height . 45) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 1272) (pixel-height . 281) (total-width . 159) (total-height . 17) (normal-height . 0.3673202614379085) (normal-width . 1.0) (buffer "README.org<floobits>" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 nil) (vscroll . 0) (dedicated) (point . 1753) (start . 559))) (leaf (last . t) (pixel-width . 1272) (pixel-height . 484) (total-width . 159) (total-height . 28) (normal-height . 0.6326797385620915) (normal-width . 1.0) (buffer "login-one.js" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 nil) (vscroll . 0) (dedicated) (point . 1304) (start . 845)))) "")))) t nil nil))